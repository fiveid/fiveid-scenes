{"version":3,"sources":["../src/index.ts","demo.ts"],"names":[],"mappings":"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","file":"demo.15019d17.js","sourceRoot":"../demo","sourcesContent":["interface IState {\n  currentIndex: number;\n  nextIndex?: number;\n  prevIndex?: number;\n}\n\ninterface IOptions {\n  activeClass: string;\n  dataKey: string;\n  initialIndex: number;\n  preTransition: (\n    state: IState,\n    callback: (nextIndex?: number) => void,\n    evt?: any\n  ) => void;\n  postTransition: (state: IState, evt?: any) => void;\n}\n\ninterface ISelectors {\n  scene: string;\n  next: string;\n  prev: string;\n  reset: string;\n  goto: string;\n  pop: string;\n}\n\ninterface IConfig extends Partial<IOptions> {\n  selectors?: Partial<ISelectors>;\n}\n\nexport class Scenes {\n  options: IOptions;\n  selectors: ISelectors;\n  activeIndex: number;\n  history: number[];\n  scenes: NodeListOf<Element>;\n\n  constructor({ selectors = {}, ...options }: IConfig = {}) {\n    this.options = {\n      activeClass: \"active\",\n      dataKey: \"sceneIndex\",\n      initialIndex: 0,\n      preTransition: (_, cb) => cb(),\n      postTransition: () => null,\n      ...options\n    };\n\n    this.selectors = {\n      scene: \".scene\",\n      next: \".scene__next\",\n      prev: \".scene__prev\",\n      reset: \".scene__reset\",\n      goto: \".scene__goto\",\n      pop: \".scene__pop\",\n      ...selectors\n    };\n\n    this.activeIndex = this.options.initialIndex || 0;\n    this.history = [this.activeIndex];\n    this.scenes = document.querySelectorAll(this.selectors.scene);\n\n    this.init();\n  }\n\n  transitionTo(index = 0, evt = {}) {\n    this.options.preTransition(\n      { currentIndex: this.activeIndex, nextIndex: index },\n      nextIndex => {\n        const prev = this.activeIndex;\n        const next = this.validateTransitionValues(nextIndex, index);\n        this.scenes[prev].classList.remove(this.options.activeClass);\n        this.scenes[next].classList.add(this.options.activeClass);\n        this.activeIndex = next;\n        this.history.push(next);\n        this.options.postTransition(\n          { currentIndex: this.activeIndex, prevIndex: prev },\n          evt\n        );\n      },\n      evt\n    );\n  }\n\n  private init() {\n    this.setupEvents();\n  }\n\n  private validateTransitionValues(to, fallback = 0) {\n    if (to === null || to === undefined) {\n      return fallback;\n    }\n    const min = 0;\n    const max = this.scenes.length - 1;\n    to = to < min ? min : to > max ? max : to;\n    return to;\n  }\n\n  private setupEvents() {\n    const getDataTargetIndex = dataset =>\n      dataset &&\n      dataset[this.options.dataKey] &&\n      Number(dataset[this.options.dataKey]);\n\n    const transitionOnClick = nextIndex => (el, i) =>\n      el.addEventListener(\"click\", evt => {\n        this.transitionTo(nextIndex(el, i), evt);\n      });\n\n    const addListeners = (selector, fn) =>\n      document.querySelectorAll(selector).forEach(fn);\n\n    const events = [\n      [this.selectors.next, () => this.activeIndex + 1],\n      [this.selectors.prev, () => this.activeIndex - 1],\n      [this.selectors.reset, () => this.options.initialIndex],\n      [this.selectors.goto, el => getDataTargetIndex(el.dataset)],\n      [\n        this.selectors.pop,\n        () => {\n          if (this.history.length >= 1) {\n            this.history.pop();\n            return this.history[this.history.length - 1];\n          }\n          return this.options.initialIndex;\n        }\n      ]\n    ];\n\n    events.forEach(([selector, fn]) =>\n      addListeners(selector, transitionOnClick(fn))\n    );\n  }\n}\n","import { Scenes } from \"../src\";\nimport \"./styles.css\";\n\nconst pagination = document.querySelectorAll(\"#pagination li\");\nconst acceptance = document.querySelector<HTMLInputElement>(\"#acceptance\");\n\nnew Scenes({\n  preTransition: ({ nextIndex, currentIndex }, cb) => {\n    if (nextIndex > 1) {\n      if (!acceptance.checked) {\n        nextIndex = currentIndex;\n      }\n    }\n    return cb(nextIndex);\n  },\n  postTransition: ({ prevIndex, currentIndex }) => {\n    pagination[prevIndex].classList.remove(\"active\");\n    pagination[currentIndex].classList.add(\"active\");\n  }\n});\n"]}